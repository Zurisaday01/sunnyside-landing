"use strict";const navEl=document.querySelector("#nav"),navMenu=document.querySelector("#nav-menu"),navToggle=document.querySelector("#nav-toggle"),navLinks=document.querySelectorAll(".navigation__link:not(.footer__link)"),heroArrow=document.querySelector("#hero-arrow"),headerEl=document.querySelector(".header"),heroEl=document.querySelector(".hero"),toggle=function(){navEl.classList.toggle("show-nav"),navMenu.classList.toggle("show-menu")};navToggle&&navToggle.addEventListener("click",(()=>{console.log("ðŸ˜„"),toggle()})),navLinks.forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault(),toggle();const o=e.getAttribute("href"),r=document.querySelector(o);"#"!==r&&r.scrollIntoView({behavior:"smooth"})}))})),heroArrow.addEventListener("click",(e=>{e.preventDefault();const t=e.target.closest("#hero-arrow").getAttribute("href");document.querySelector(t).scrollIntoView({behavior:"smooth"})}));const heightHeader=headerEl.getBoundingClientRect().height,stickyCallback=function(e){const[t]=e;t.isIntersecting?headerEl.classList.remove("sticky-nav"):headerEl.classList.add("sticky-nav")},stickyOptions={root:null,threshold:0,rootMargin:`-${heightHeader}px`},observer=new IntersectionObserver(stickyCallback,stickyOptions);observer.observe(heroEl);